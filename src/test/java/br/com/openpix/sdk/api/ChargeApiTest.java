/*
 * Woovi
 * A Woovi é uma Plataforma de Gestão de Pagamentos. Para utilizar nossa API você deve acessar  __[https://api.woovi.com/](https://api.woovi.com/)__ e somente o mesmo. A Woovi não aceita subdominios para a API.  Veja como configurar seu acesso a nossa API [aqui](https://developers.woovi.com/docs/apis/api-getting-started).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package br.com.openpix.sdk.api;

import br.com.openpix.sdk.ApiException;
import br.com.openpix.sdk.model.ApiV1AccountAccountIdGet400Response;
import br.com.openpix.sdk.model.ApiV1ChargeGet200Response;
import br.com.openpix.sdk.model.ApiV1ChargeIdDelete200Response;
import br.com.openpix.sdk.model.ApiV1ChargeIdGet200Response;
import br.com.openpix.sdk.model.ApiV1ChargePost200Response;
import br.com.openpix.sdk.model.ChargePayload;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChargeApi
 */
@Disabled
public class ChargeApiTest {

    private final ChargeApi api = new ChargeApi();

    /**
     * Get a list of charges
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV1ChargeGetTest() throws ApiException {
        OffsetDateTime start = null;
        OffsetDateTime end = null;
        String status = null;
        ApiV1ChargeGet200Response response = api.apiV1ChargeGet(start, end, status);
        // TODO: test validations
    }

    /**
     * Delete a charge
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV1ChargeIdDeleteTest() throws ApiException {
        String id = null;
        ApiV1ChargeIdDelete200Response response = api.apiV1ChargeIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get one charge
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV1ChargeIdGetTest() throws ApiException {
        String id = null;
        ApiV1ChargeIdGet200Response response = api.apiV1ChargeIdGet(id);
        // TODO: test validations
    }

    /**
     * Create a new Charge
     *
     * Endpoint to create a new Charge for a customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV1ChargePostTest() throws ApiException {
        ChargePayload chargePayload = null;
        Boolean returnExisting = null;
        ApiV1ChargePost200Response response = api.apiV1ChargePost(chargePayload, returnExisting);
        // TODO: test validations
    }

    /**
     * Get an image of Qr Code from a Charge
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openpixChargeBrcodeImageIdPngsize1024GetTest() throws ApiException {
        String id = null;
        String size = null;
        api.openpixChargeBrcodeImageIdPngsize1024Get(id, size);
        // TODO: test validations
    }

}
